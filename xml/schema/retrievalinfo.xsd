<?xml version="1.0" encoding="UTF-8"?>
<!--
  Metaproxy XML config file schemas
  
    Copyright (C) 2005-2011 Index Data.
  
    See the LICENSE file for details
  
  
  The RelaxNG Compact Syntax file 'retrievalinfo.rnc' is the master copy.
  
  The RelaxNG XML Syntax and XML Schema are generated using 'trang':
  trang retrievalinfo.rnc retrievalinfo.rng 
  trang retrievalinfo.rnc retrievalinfo.xsd 
  
  Config file validation is done using 'xmllint':
  xmllint -/-relaxng retrievalinfo.rng retrievalinfo.xml 
  xmllint -/-schema retrievalinfo.xsd retirevalinfo.xml
  
  For information on RelaxNG see http://relaxng.org 
  see also http://books.xmlschemata.org/relaxng/
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://indexdata.com/yaz" xmlns:mp="http://indexdata.com/metaproxy" xmlns:y="http://indexdata.com/yaz">
  <xs:import schemaLocation="local.xsd"/>
  <xs:import namespace="http://indexdata.com/metaproxy" schemaLocation="metaproxy.xsd"/>
  <!--
    need to be in different namespace then metaproxy, otherwise 
    xslt element definition clashes in XML Schema files
    namespace y = "http://indexdata.com/metaproxy"
  -->
  <xs:element name="marc">
    <xs:complexType>
      <xs:attribute name="inputformat" use="required" type="xs:string"/>
      <xs:attribute name="outputformat" use="required" type="xs:string"/>
      <xs:attribute name="inputcharset" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="xslt">
    <xs:complexType>
      <xs:attribute name="stylesheet" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="retrievalinfo" substitutionGroup="filter_record_transform"/>
  <xs:element name="retrieval">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="y:backend"/>
      </xs:sequence>
      <xs:attribute name="syntax" use="required" type="xs:string"/>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="identifier" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="backend">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="y:marc"/>
        <xs:element ref="y:xslt"/>
      </xs:choice>
      <xs:attribute name="syntax" use="required" type="xs:string"/>
      <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
