<?xml version="1.0" encoding="UTF-8"?>
<!--
  Metaproxy XML config file schemas
  
    Copyright (c) 2005-2008 Index Data.
  
    See the LICENSE file for details
  
  
  The RelaxNG Compact Syntax file 'retrievalinfo.rnc' is the master copy.
  
  The RelaxNG XML Syntax and XML Schema are generated using 'trang':
  trang retrievalinfo.rnc retrievalinfo.rng 
  trang retrievalinfo.rnc retrievalinfo.xsd 
  
  Config file validation is done using 'xmllint':
  xmllint -/-relaxng retrievalinfo.rng retrievalinfo.xml 
  xmllint -/-schema retrievalinfo.xsd retirevalinfo.xml
  
  For information on RelaxNG see http://relaxng.org 
  see also http://books.xmlschemata.org/relaxng/
-->
<grammar xmlns:y="http://indexdata.com/yaz" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!--
    need to be in different namespace then metaproxy, otherwise 
    xslt element definition clashes in XML Schema files
    namespace y = "http://indexdata.com/metaproxy"
  -->
  <start combine="choice">
    <ref name="retrievalinfo"/>
  </start>
  <define name="marc">
    <element name="y:marc">
      <attribute name="inputformat">
        <data type="string"/>
      </attribute>
      <attribute name="outputformat">
        <data type="string"/>
      </attribute>
      <attribute name="inputcharset">
        <data type="string"/>
      </attribute>
    </element>
  </define>
  <define name="xslt">
    <element name="y:xslt">
      <attribute name="stylesheet">
        <data type="string"/>
      </attribute>
    </element>
  </define>
  <define name="retrievalinfo">
    <element name="y:retrievalinfo">
      <attribute name="version">
        <value>1.0</value>
      </attribute>
      <oneOrMore>
        <element name="y:retrieval">
          <attribute name="syntax">
            <data type="string"/>
          </attribute>
          <optional>
            <attribute name="name">
              <data type="string"/>
            </attribute>
          </optional>
          <optional>
            <attribute name="identifier">
              <data type="string"/>
            </attribute>
          </optional>
          <optional>
            <!--
              attribute backendsyntax { xsd:string }?,
              attribute backendname { xsd:string }?,
            -->
            <element name="y:backend">
              <attribute name="syntax">
                <data type="string"/>
              </attribute>
              <optional>
                <attribute name="name">
                  <data type="string"/>
                </attribute>
              </optional>
              <zeroOrMore>
                <choice>
                  <ref name="marc"/>
                  <ref name="xslt"/>
                </choice>
              </zeroOrMore>
            </element>
          </optional>
        </element>
      </oneOrMore>
    </element>
  </define>
</grammar>
