<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id: zeerex-explain.xml,v 1.3 2006-09-08 12:52:02 marc Exp $ -->

<!-- this file configures the SRU/SRW explain response -->
<!-- see: http://explain.z3950.org/dtd/commentary.html -->
<!-- validate this using zeerex-2.0.xsd -->
<!-- http://explain.z3950.org/dtd/zeerex-2.0.xsd -->
<!-- Extensions see: http://explain.z3950.org/dtd/extensions.html -->
<!-- Other info:  Z39.92 -->

<explain xmlns="http://explain.z3950.org/dtd/2.0/"
         xmlns:izx="http://indexdata.com/zeerex/1.0">

  <!-- try stylesheet url: http://./?stylesheet=docpath/sru2.xsl -->
  <serverInfo protocol="SRW/SRU/Z39.50">

    <host>foo.indexdata.dk</host>
    <port>80</port>
    <!-- <database numRecs="1314" lastUpdate="2006-03-15 09-05-33">
         Default</database> -->
    <database>Default</database>
        <!--<authentication>
      <user>azaroth</user>
      <group>agroup</group>
      <password>squirrelfish</password>
    </authentication>-->
  </serverInfo>

  <databaseInfo>

    <title lang="en" primary="true">Metaproxy SRU/SRW/Z39.50 server</title>

    <description lang="en" primary="true">
      Test ZeeRex Explain for SRU  and CQL-to-PQF query Metaproxy filter
    </description>

    <author>Marc Cromme, Index Data Aps, 
            http://www.indexdata.dk</author>

    <contact>Marc Cromme, marc(at)indexdata(dot)com</contact>

    <!--<langUsage codes="en fr">
        The records are in English and French.
        </langUsage>  -->
    <!-- <extend>Partially crawled web data</extend> -->
   
    <history>
      Implemented for Talis
    </history>

    <implementation  identifier="Metaproxy" version="0.??">
      <title>Index Data Metaproxy http://www.indexdata.dk</title>
    </implementation>
    
    <links> 
      <link type="z39.50">http://foo.indexdata.dk:80</link>
      <link type="srw">http://foo.indexdata.dk:80</link>
      <link type="sru">http://foo.indexdata.dk:80</link>
    </links>
    
  </databaseInfo>

  <!--
  <metaInfo>
    <dateModified>2002-03-29 19:00:00</dateModified>
    <aggregatedFrom> z39.50r://gondolin.hist.liv.ac.uk:210/IR-Explain-1?
                   id=ghlau-1;esn=F;rs=XML </aggregatedFrom>
    <dateAggregated>2002-03-30 06:30:00</dateAggregated>
  </metaInfo>
  -->



  <!-- tricky problem of mapping PQF to CQL or 
       other query forms (Opensearch?? -->
  <!--
  PQF query language evaluation in most natural order
  boolean:            @and, @or, @not, @prox
  boolean modifier:   @prox exclusion distance ordered relation which unit 
                      @prox 0 3 1 2 k 2 term1 term2
  attrset:            bib-1, exp-1, gils
  1=Use:              4=Title 7=ISBN 8=ISSN 30=Date 62=Abstract 
                      1003=Author 1016=Any
  4=Structure:        1=Phrase  2=Word  3=Key  4=Year  5=Date  6=WordList
  2=Relation:         1<   2<=  3=  4>=  5>  6!=  102=Relevance
  5=Truncation:       1=Right  2=Left  3=L&R  100=No  101=#  102=Re-1  103=Re-2
  6=Completeness:     1=Incompl subfield  2=Complete subfield  3=Complete field
  3=Position:         1=First in Field  2=First in subfield  3=Any position
  term:               fish, "fish and chips"
  regexp:             ...
  -->
  <!--
  CQL query language evaluation in most natural order
  boolean:            and, or, not, prox
  boolean mod set:    and/rel.sum (cql is default)
  boolean modifier:   distance, unit, ordered, unordered
  boolean mod rel:    =, <, >, prox/distance=1, prox/distance>2
  boolean mod qual:   prox/distance=1/unit=word, prox/distance>2/ordered 
  set name:           cql, rec, dc
  index name:         cql.all, cql.serverChoice, rec.id, dc.title
  relation:           <, <=, =, >, >=, <>, exact, all, any
  relation mod set:   cql (default), rel
  relation mod name:  relevant, phonetic, stem 
                      any/relevant/rel.CORI 
  relation mod qual:  word, string, isoDate, number, uri, masked, unmasked
                      =/relevant=word
  anchoring:          ^left, right^, "^cat in the hat" 
  masking char:       *, ?, c*t, c?t 
  term:               fish, "fish and chips"
  -->

  <queryInfo
      xmlns="http://indexdata.com/query"
      version="1.0">
    <syntax name="cql" 
            identifier=""
            location="">
      <boolean name="and"/>
      <boolean name="or"/>
      <boolean name="not"/>
      <!--
      <boolean name="prox">
        <boolean_mod_rel name="="/>
        <boolean_mod name="distance">
          <boolean_mod_rel name="="/>
          <boolean_mod_rel name="&lt;"/>
          <boolean_mod_rel name="&gt;"/>
        </boolean_mod>
        <boolean_mod name="unit">
          <boolean_mod_qual name="sentence"/>
          <boolean_mod_qual name="word"/>
        </boolean_mod>
        <boolean_modifier name="ordered" name=""/>
        <boolean_modifier name="unordered" name=""/>
      </boolean>
      -->

      <relation name="=" default="true"/>

      <set name="cql" default="true" 
           identifier="info:srw/cql-context-set/1/cql-v1.1">
        <title>CQL Standard Set</title>
        <index name="all" default="true">
          <relation name="=" default="true">
            <relation_mod_set name="cql" default="true">
              <relation_mod name="relevant"/>
            </relation_mod_set>
            <relation_mod_set name="rel">
              <relation_mod name="foo"/>
              <relation_mod name="bar"/>
            </relation_mod_set>
          </relation>
          <mask name="*"/>
          <mask name="?"/>
          <anchor name="^" type="right"/>
          <anchor name="^" type="left"/>
        </index>
        <index name="serverChoice"/>
      </set>
      <set name="rec" identifier="info:srw/cql-context-set/2/rec-1.0">
        <title>Record Standard Set</title>
        <index name="id" default="true"/>
      </set>
      <set name="dc" identifier="info:srw/cql-context-set/1/dc-v1.1">
        <title>Dublin Core Set</title>
        <index name="title"/>
        <index name="description"/>
        <index name="author" identifier="creator"/>
        <index name="creator"/>
        <index name="date">
          <relation name="=" default="true"/>
          <relation name="&lt;"/>
          <relation name="&gt;"/>
        </index>
        <index name="publisher"/>
      </set>
    </syntax>
    <syntax name="pqf" 
            identifier=""
            location="">
      <set name="bib1" identifier="1.2.840.10003.3.1">
        <title>BIB-1 Z39.50 Standard Set</title>
        <structure name="2" default="true"/>
        <structure name="1"/>
        <relation name="3"/>
        <truncation name="100"/>
        <completeness name="3"/>
        <position name="3"/>
        <use name="4">
          <title>Title</title>
        </use>
        <use name="7">
          <title>ISBN</title>
          <structure name="3">
            <relation name="3" default="true"/>
            <relation name="1"/>
            <relation name="4"/>
          </structure>
        </use>
        <use name="8">
          <title>ISSN</title>
          <structure name="3"/>
        </use>
        <use name="30">
          <title>Date</title>
          <structure name="5"/>
        </use>
        <use name="62">
          <title>Abstract</title>
        </use>
        <use name="1003">
          <title>Author</title>
        </use>
        <use name="1016">
          <title>Any</title>
          <structure name="2">
            <relation name="3" default="true"/>
            <relation name="102">
              <truncation name="100" default="true"/>
              <truncation name="101"/>
              <truncation name="102"/>
            </relation>
          </structure>
        </use>
      </set>
      <set name="exp1" identifier="">
        <title>Explain Z39.50 Standard Set</title>
      </set>
      <set name="gils" identifier="">
        <title>Gils Z39.50 Standard Set</title>
      </set>
    </syntax>
    <syntax name="ccl" 
            identifier=""
            location="">
      <title xml:lang="en">CCL Query Language - English Configuration</title>
      <title xml:lang="da">CCL SÃ¸gesprog - Dansk Konfiguration</title>
      <boolean xml:lang="en" name="and" default="true" identifier="and"/>
      <boolean xml:lang="en" name="or" identifier="or"/>
      <boolean xml:lang="en" name="not" identifier="not"/>
      <boolean xml:lang="da" name="og" default="true" identifier="and"/>
      <boolean xml:lang="da" name="eller" identifier="or"/>
      <boolean xml:lang="da" name="ikke" identifier="not"/>

      <relation name="=" default="true"/>

      <index xml:lang="en" name="title"/>
      <index xml:lang="en" name="description" default="true"/>
      <index xml:lang="en" name="author" identifier="creator"/>
      <index xml:lang="en" name="creator"/>
      <index xml:lang="en" name="publisher"/>
      <index xml:lang="da" name="titel" identifier="title"/>
      <index xml:lang="da" name="beskrivelse"  default="true" 
             identifier="description"/>
      <index xml:lang="da" name="author" identifier="creator"/>
      <index xml:lang="da" name="ophav" identifier="creator"/>
      <index xml:lang="da" name="editor" identifier="publisher"/>
    </syntax>
  </queryInfo>



  <indexInfo>
    <set name="cql" identifier="info:srw/cql-context-set/1/cql-v1.1">
      <title>CQL Standard Set</title>
    </set>
    <set name="rec" identifier="info:srw/cql-context-set/2/rec-1.0">
      <title>Record Standard Set</title>
    </set>
    <set name="dc" identifier="info:srw/cql-context-set/1/dc-v1.1">
      <title>Dublin Core Set</title>
    </set>
    <set name="bib1" identifier="1.2.840.10003.3.1">
      <title>BIB-1 Z39.50 Standard Set</title>
    </set>


    <!-- CQL standard index -->
    <index search="true" scan="true" sort="false">
      <title lang="en">CQL Server Choice</title>
      <map><name set="cql">serverChoice</name></map>
      <map>
        <attr type="1" set="bib1">text</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">CQL All</title>
      <map><name set="cql">all</name></map>
      <map>
        <attr type="1" set="bib1">text</attr>
      </map>
    </index>

    <!-- Record ID index -->
    <index search="true" scan="true" sort="false">
      <title lang="en">Record ID</title>
      <map><name set="rec">id</name></map>
      <map>
        <attr type="1" set="bib1">rec:id</attr>
        <attr type="4" set="bib1">3</attr>
      </map>
    </index>    

    <!-- Dublin Core Indexes -->
    <index search="true" scan="true" sort="false">
      <izx:cost value="0"/>
      <title lang="en">DC Title</title>
      <map><name set="dc">title</name></map>
      <map>
        <attr type="1" set="bib1">dc:title</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Creator</title>
      <map><name set="dc">creator</name></map>
      <map>
        <attr type="1" set="bib1">dc:creator</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Subject</title>
      <map><name set="dc">subject</name></map>
      <map>
        <attr type="1" set="bib1">dc:subject</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Description</title>
      <map><name set="dc">description</name></map>
      <map>
        <attr type="1" set="bib1">dc:description</attr>
        <!-- <attr type="2" set="bib1">102</attr> -->
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Publisher</title>
      <map><name set="dc">publisher</name></map>
      <map>
        <attr type="1" set="bib1">dc:publisher</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Contributor</title>
      <map><name set="dc">contributor</name></map>
      <map>
        <attr type="1" set="bib1">dc:contributor</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Date</title>
      <map><name set="dc">date</name></map>
      <map>
        <attr type="1" set="bib1">dc:date</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Type</title>
      <map><name set="dc">type</name></map>
      <map>
        <attr type="1" set="bib1">dc:type</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Format</title>
      <map><name set="dc">format</name></map>
      <map>
        <attr type="1" set="bib1"></attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Identifier</title>
      <map><name set="dc">identifier</name></map>
      <map>
        <attr type="1" set="bib1">dc:identifier</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Source</title>
      <map><name set="dc">source</name></map>
      <map>
        <attr type="1" set="bib1">dc:source</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Language</title>
      <map><name set="dc">language</name></map>
      <map>
        <attr type="1" set="bib1">dc:language</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Relation</title>
      <map><name set="dc">relation</name></map>
      <map>
        <attr type="1" set="bib1">dc:relation</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Coverage</title>
      <map><name set="dc">coverage</name></map>
      <map>
        <attr type="1" set="bib1">dc:coverage</attr>
      </map>
    </index>
    <index search="true" scan="true" sort="false">
      <title lang="en">DC Rights</title>
      <map><name set="dc">rights</name></map>
      <map>
        <attr type="1" set="bib1">dc:rights</attr>
      </map>
    </index>

  </indexInfo>

  <!-- Z39.50 stuff ... not allowed in one and the same explain together with 
       <schemaInfo>, sic ..
  <recordInfo>
    <recordSyntax identifier="1.2.840.10003.5.109.10">
      <elementSet name="F">
        <title lang="en" primary="true">Full XML Record</title>
      </elementSet>
      <elementSet name="B">
        <title lang="en" primary="true">Brief XML Record</title>
      </elementSet>
    </recordSyntax>
  </recordInfo>
  -->

  <retrievalInfo 
      xmlns="http://indexdata.com/retrieval"
      version="1.0">
    <retrieval 
        syntax="grs-1"
        identifier="1.2.840.10003.5.105"
        location="http://www.loc.gov/z3950/agency/asn1.html#RecordSyntax-generic"/>
    <retrieval 
        syntax="marc21" 
        identifier="1.2.840.10003.5.10"
        location="http://www.loc.gov/marc/">
      <title lang="en">Marc21</title>
      <elementset name="F">
        <title lang="en" primary="true">Full Marc21 Record</title>
        <backend syntax="usmarc" name="F"/>
      </elementset>
      <elementset name="B">
        <title lang="en" primary="true">Brief Marc21 Record</title>
        <backend syntax="usmarc" name="B"/>
      </elementset>
    </retrieval>

    <retrieval 
        syntax="xml" 
        identifier="1.2.840.10003.5.109.10"
        location="http://www.w3.org/XML/">
        <!-- location="http://www.w3.org/TR/2006/REC-xml-20060816/"  -->
      <title lang="en">XML</title>
      <elementset
          identifier="info:srw/schema/1/marcxml-v1.1"
          location="http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd"
          name="marcxml">
        <title lang="en">MarcXML</title>
        <backend syntax="usmarc" name="F"/>
        <convert>
          <marc inputformat="marc" outputformat="marcxml"
                inputcharset="marc-8"/>
        </convert>
      </elementset>
      
      <elementset 
          name="marcxchange">
        <title lang="en">Marc XChange</title>
        <backend syntax="usmarc" name="F"/>
        <convert>
          <marc inputformat="marc" outputformat="marcxchange"
                inputcharset="marc-8"/>
        </convert>
      </elementset>
      
      <elementset 
          identifier="info:srw/schema/1/dc-v1.1"
          location="http://www.loc.gov/standards/sru/dc-schema.xsd"
          name="dc">
        <title lang="en">Dublin Core</title>
        <backend syntax="usmarc" name="F"/>
        <convert>
          <marc inputformat="marc" outputformat="marcxml"
                inputcharset="marc-8"/>
          <xslt stylesheet="../etc/MARC21slim2DC.xsl"/>
        </convert>
      </elementset>
    </retrieval>
  </retrievalInfo>

<!--
  <schemaInfo>
    <schema identifier="info:srw/schema/2/rec-1.0"
            location="http://srw.cheshire3.org/schemas/rec/1.0/rec.xsd" 
            name="rec"
            retrieve="true">
      <title lang="en">Record Metadata</title>
      
    </schema>
    <schema identifier="info:srw/schema/1/dc-v1.1"
            location="http://www.loc.gov/standards/sru/dc-schema.xsd" 
            name="dc"
            retrieve="true">
      <title lang="en">Dublin Core</title>
    </schema>
    <schema identifier="info:srw/schema/1/mods-v3.0"
            location="http://www.loc.gov/standards/mods/v3/mods-3-0.xsd"
            name="mods"
            retrieve="true">
      <title lang="en">Mods</title>
    </schema>
    <schema identifier="info:srw/schema/1/marcxml-v1.1"
            location="http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd"
            name="marcxml"
            retrieve="true">
      <title lang="en">MarcXML</title>
    </schema>
  </schemaInfo>
-->
 
  <configInfo>

    <!-- searchRetrieve settings -->

    <!-- default context set -->
    <default type="contextSet">cql</default>

    <default type="index">all</default>

    <!-- default relation -->
    <default type="relation">=</default>

    <supports type="relation" 
              izx:type="2" izx:set="bib1" izx:value="1">&lt;</supports>
    <supports type="relation" 
              izx:type="2" izx:set="bib1" izx:value="2">&lt;=</supports>
    <supports type="relation"
              izx:type="2" izx:set="bib1" izx:value="3">=</supports> 
    <supports type="relation"
              izx:type="2" izx:set="bib1" izx:value="4">&gt;=</supports>
    <supports type="relation"
              izx:type="2" izx:set="bib1" izx:value="5">&gt;</supports>


    <!-- <supports type="relation">&lt;&gt;</supports> --><!-- 2=6 DEAD !!! -->
    <!-- <supports type="relation">all</supports> --><!-- 2=3 OK -->
    <!-- <supports type="relation">any</supports> --><!-- 2=3 OK -->

    <supports type="relationModifier"
              izx:type="2" izx:set="bib1" izx:value="102">relevant</supports>

    <!-- <supports type="relationModifier"
              izx:type="2" izx:set="bib1" izx:value="100">phonetic</supports> -->
    <!-- <supports type="relationModifier"
              izx:type="2" izx:set="bib1" izx:value="101">stem</supports> -->


    <!-- support proximity (Empty) -->
    <!-- <supports type="proximity"></supports> --> <!-- DEAD,  title = (house prox/distance=1/unit=word  the) FAILS -->


    <!-- proximity modifier supported by the server or index 
         (relation, distance, unit, ordering) -->
    <!-- <supports type="proximityModifier"></supports> -->

    <!-- boolean modifier supported by the server or index -->
    <!-- <supports type="booleanModifier"></supports> -->

    <!-- masking character supported (* or ?) -->
    <supports type="maskingCharacter">*</supports>
    <supports type="maskingCharacter">?</supports>

    <!-- anchoring supported? (^ character) -->
    <!-- MARC: how do I express that I only support left anchoring in 
         the beginning of the field ( bib1 3=1 ), but no right anchoring ?? -->
    <!-- MIKE: You can't.  The ZeeRex documentation should be changed
	 to allow this, as <supports type="anchoring">left</supports> -->
    <!-- <supports type="anchoring"></supports> -->

    <!-- empty terms supported (Empty) -->
    <!-- MARC: what's the use case of this ?? -->
    <!-- MIKE: lots of uses!  For example, scanning from the very
	 start of the index with 'scan @attr 1=text ""'.  Or searching
	 for bibliographic records with no title, etc. -->
    <!-- MARC: I see, and we can if we always use '""' 
         (the empty string), as in 'scan @attr 1=text ""' -->
    <supports type="emptyTerm"></supports>


    <!-- sorting settings -->

    <!-- default schema used in sorting, in short name form -->
    <!-- <default type="sortSchema"></default> -->
    <!-- MIKE: deprecated -->

    <!-- server support sort -->
    <!-- MARC: why stating this redundant info here?? it's already in the 
         <index sort="true" attribute -->
    <!-- MIKE: that's not quite the same thing.  This is saying
         whether the server can do sorting at all.  Since
	 sort="true|false" attributes can be omitted entirely from
	 indexes, you can't deduce from a set of <index> elements
	 without sorting specified that the server doesn't support
	 sorting -->
    <!-- MARC: which ought to be the same thing than saying that sorting is 
         _not_ possible. In short,  one simple <index sort="true" attribute
         should be enough to tell that sorting _is_ possible. Or we have the 
         same discussion about overruling general sorting capabilities in 
         specific indexes ?? Quite confusing ... -->
    <!-- MIKE: no, within an <index>, saying sort="true" means that
	 you can sort on it, sort="false" means that you can't, and
	 not saying anything means you're not saying anything.  Three
	 different cases.   That's as it should be, since Explain
	 records might be auto-generated by systems that can't do the
	 necessary probes.  So a ZeeRex record might not have "sort"
	 attributes on any of its <index>es, but still say that
	 sorting is supported.  The client (or user) has to experiment
	 to find out what indexes support it.  Check the mailing list
	 archives if you want a rationale, I forget the details. -->
    <!-- <supports type="sort"></supports> -->

    <!-- supported sortmodifier (ascending, missingValue, caseSensitive) -->
    <!-- <supports type="sortModifier"></supports> -->
    <!-- MIKE: this is for the new CQL "sortby" sorting, which Zebra
	 doesn't yet do at all, so you're right to omit this for now. -->

    <!-- presentation settings --> 

    <!-- default number of records that a server will return at once  -->
    <default type="numberOfRecords">0</default>

    <!-- default schema used for retrieved records -->
    <default type="retrieveSchema">index</default>
    <!-- MIKE: That's not what I get by default.  A URL such as
http://localhost:1314/Default?version=1.1&operation=searchRetrieve&query=1&maximumRecords=10
         gives me a weird sort of hybrid record with <metadata>
	 sections and <z:index> elements.  Unfortunately, the SRU
	 response doesn't see to explicitly state what schema is
	 used. -->
     <!-- MARC: Right, the default seems to be the 'index' schema. I have to 
          talk to Adam to get a better way to choose the default schema -->

    <!-- default stylesheet URL, or if stylesheets are supported -->
    <!-- MARC: here I want to express: no default, but you kan use this 
         and only this one - should I use 'setting' ?? -->
    <!-- MIKE: There is no way to say this at present, but what you
	 suggest is sensible.  Please suggest it to the list -->
    <setting type="stylesheet">docpath/sru.xsl</setting>

    <!-- default record packing returned (string or xml) -->
    <default type="recordPacking">xml</default>

    <!-- maximum number of records that a server will return at once -->
    <!-- <setting type="maximumRecords">1000</setting> -->

    <!-- support result sets (Empty) -->
    <!-- MARC: this one is for result sets in Z39.50, right ?? -->
    <!-- MIKE: No, this also applies for SRU -->
    <!-- MARC: Rrrrriiiight! That's why the section about this is called
         <schemaInfo>, and the word resultSet never appears in a SRU Explain.
         Very intuitive! -->
    <!-- MIKE: I don't understand what point you're making.  SRU, like
	 Z39.50, has specifications for how to do result sets.  But I
	 don't know whether Zebra supports them or not -->
    <!-- MARC: open question, then, I'll better comment out -->
    <!-- <supports type="resultSets"></supports>  --> 

    <!-- XPath retrieval supported -->
    <!-- <supports type="recordXPath"></supports> -->


    <!-- scan settings -->

    <!-- scan operation supported -->
    <supports type="scan"></supports>

    <!-- default number of terms to be returned in scan -->
    <default type="numberOfTerms">20</default>



    <!-- other server settings -->

    <!-- older version of the protocol supported  -->
    <!-- MARC: why only older versions of the protocol ?? It seems 
         natural just to list what you understand, including the one the
         client sucesfully used --> 
    <!-- MIKE: it may seem natural, but it ain't what it means! -->
    <!-- MARC: but makes sense, and makes determining the list of protocol 
         versions easier in a thin client -->
    <!-- MIKE: if you want to change the meaning of this, then propose
	 it on-list.  I doubt you'll get much support.  Thin clients
	 won't use this anyway, they will just speak one version and
	 hope for the best -->
    <!-- <supports type="version">1.1</supports> -->

    <!-- number of seconds that a result set will be maintained for -->
    <setting type="resultSetTTL">0</setting>

    <!-- A type of extraRequestData available in the
         searchRetrieveRequest. The extra*Data fields are represented as two
         space separated words, the first the identifier for the extension and
         the second the individual element name from the extension. If there is
         only one word, then it is the extension id and all elements from
         within are supported. -->
    <!-- <supports type="extraSearchData"></supports> -->
    <!-- MIKE: we could explain x-pquery here -->
    <!-- MARC: I talked to Adam about this. We should make a new 'x-type'
         with possible values PQF, CQL, CCL , .. such that 'query' still is
         obligatory, and carries the query string, be it PQF, CCL, or CQL. -->
    <!-- MIKE: Yes, that would be _much_ better -->

    <!-- A type of extraRequestData available in the explainRequest -->
    <!-- <supports type="extraExplainData"></supports> -->

    <!-- A type of extraRequestData available in the scanRequest -->
    <!-- <supports type="extraScanData"></supports> -->
    <!-- MIKE: we could explain x-pscan here -->
    <!-- MARC: re-use of 'x-type' here .. drop 'x-pscan' -->

    <!-- The URI identifier of a supported profile -->
    <!-- MARC: what's this ?? -->
    <!-- <supports type="profile"></supports> -->
    <!-- MIKE: this is a very good thing, which we should use when the
	 time is right.  A "profile" is a complete set of
	 specifications for using Z39.50 and/or SRU within a
	 particular application domain.  We should write a (brief)
	 "Alvis Profile for SRU", assign it an opaque identifier URI,
	 and point to it here.  (Not today, though!) -->
    <!-- MARC: so this is some HTML prosa text ?? -->
    <!-- MIKE: see for example
	http://zthes2.z3950.org/srw/zthes-srw-1.0.html
	-->
  </configInfo>
   
</explain>
